# First the different message types are defined
# in the special 'message' block. Messages can contain
# data such as the ping example which contains an int
pinid pin1 1;
pinid pin123 94;
pinid pin9 23;

messages {
	Ping(int i);
	Pong;
}

task ping(int pongtaskid) {
	taskid last = spawn nice_task_name_hehe(); # the builtin 'nice_task_name_hehe' returns the task id of the current task
	msg pingmsg = Ping(last); # the msg type can contain any of the messages

	for(;;){
		# a ping message is sent to the pong task
		send pingmsg to pongtasskid;
		receive {
		case Pong: delay(1);
		}
	}
}

task pong() {
	for(;;) {
		receive {
		case Ping(pingtaskid): send pong to pingtaskid;
		}
	}
}

function setup() -> void {
	taskid pongtaskid = spawn pong();
	taskid pingtaskid = spawn ping(pongtaskid);
}
