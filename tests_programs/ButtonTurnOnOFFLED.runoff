messages {
  ButtonPressed;
  ButtonReleased;
}

task blinker(pinid pin, uint32 adelay) {
  for(;;) {
    turnOn(pin);
    delay(adelay);
    turnOff(pin);
    delay(adelay);
  }
}


task blinkOnPress(pinid led) {
  for(;;) {
    receive {
      case ButtonPressed{}: turnOn(led);
      case ButtonReleased{}: turnOff(led);
      default:
    }
  }
}


task messagesHandler(pinid button, taskid stask) {
  bool t = false;
  bool last = t;
  for(;;){
    t = readInput(button);
    if(t != last){
      if(t){
        send ButtonPressed{} to stask;
      } else {
        send ButtonReleased{} to stask;
      }
    }
    last = t;
  }
}


function setup() -> void {
    outputPin(12P);
    outputPin(13P);
    outputPin(9P);
    simpleInputPin(7P);
    spawn blinker(13P, 500);
    spawn blinker(12P, 750);
    taskid spawnPressID = spawn blinkOnPress(9P);
    spawn messagesHandler(7P, spawnPressID);
}
