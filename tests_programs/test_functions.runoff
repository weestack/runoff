messages {
  Ping;
  Pong{int a, int b, bool c};
}

struct hello {
	int nicelevel100;
}

function setup() -> void {
  int8 a = 321;
  int16 b = 123;
  int32 c = 32123;
  int32 d = 123 + 321;
  return;
}

function ss(int a) -> struct hello {
    struct hello test;
    return test;
}

function print(int what) -> void {
}

function dummy(int a) -> int {
  print(a);
  bool state = true;
  while(true) {
    pinid ledPin = 5P;
    setOutput(ledPin, state);
    state = !state;
    delay(1000);
  }

  return 1;

  switch(a) {
    case 1:
    case 2:
    case 3:
    case 4:
        print(a);
    default:
        print(a);
  }

  receive {
    case Ping{}: print(1);
    case Pong{a, b, c}:
    	b++;
    	a++;
    	print(a);
    default:
  }

  float so123;

  if (so123 == 123.456) {
  	int abc;
    print(abc);
    int a = 123;
    int c = abc;
  } else {
  	int a = 1234;
    print(a);
  }

  if (true) {
    print(123);
  }

  if (false) {

  }elseif (true) {
    print(333);
  }else {
    print(444);
  }
  int hej;
  int last;
  (true) ? print(hej) : print(last);
  1<2 ? print(hej) : print(last);
  (1*2+3/123) == 1 ? print(hej) : print(last);

  int value = true ? 1 : 2;

  int[3] array;
  int[3][5] b;
  b[1][1] = 15;
  print(b[1][1]);

  int abe = 123 ^ 123; # should be 0
  int bil = 1 | 1;
  int c = 123 & 12;
  int d = ~12;
  int e = 3 >> 4;
  int f = 4 << 3;
  int g = f << e;
  int h = (f * 9) << (e % 3) * 2;
  while ( h > 5 ) {
    h--;
    h++;
    h + 5;
    h--;
  }

  switch(h%1) {
    case 1:
      h = 213;
    default:
      h = 123;
  }

}
