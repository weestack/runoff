# Struct
struct hej {
    int a;
    int64 wuut;
}

struct test {
  int a;
  int64 b;
  bool c;
  struct hej sej;
}

# Messages
messages {
  ledPin;
  puuuhaa;
}

function print(int64 wack) -> void {

}

function hehe(struct test s) -> int {
	return s.sej.a;
}

function test_memcpy(int[123] a, bool[32] v, float[12] s) -> bool {
  return false; # :sunglasses:
}

function ad() -> void {
  # bool
  bool p = true;
  bool[5] list_of_bools;
  p = false;
  # int
  int c = -123;
  # int8
  int8 t = 123;
  # int16
  int16 v = 3213213;
  # int32
  int32 m = 321343214321;
  # int64
  int64 z= 4831482134324321;

  # int8
  uint8 u = 123;
  # int16
  uint16 i = 3213213;
  # int32
  uint32 o = 321343214321;
  # int64
  uint64 l = 4831482134324321;

  float ff = 1000.0;
  float ff1 = 1.00;
  float ff2 = -1.00;

  # test something funny which works
  int abc = int def + def*2;
  # The following does not work the left side comes first
  #int cba = 2*fed + int fed;

  struct test peter1234;
  peter1234.a = 123;
  print(peter1234.b);
  peter1234.c = true;

  print(peter1234.sej.wuut);
  v = ( (1+3) > 0 ) ? 4*5: 7*6;
  v++;
  v--;
  v = v--;

  int[5] numbers;
	numbers[0] = 1;
	numbers[1] = 2;
	numbers[2] = 3;
	numbers[3] = 4;
	numbers[4] = 5;

}

function setup() -> void {
}
